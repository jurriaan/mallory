#!/usr/bin/env ruby
lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'mallory'
require 'optparse'

key = OpenSSL::PKey::RSA.new 2048
ca = OpenSSL::X509::Certificate.new
ca.version = 2
ca.serial = 1
ca.subject = OpenSSL::X509::Name.parse '/CN=ROOT'
ca.issuer = ca.subject
ca.public_key = key.public_key
ca.not_before = Time.now
ca.not_after = ca.not_before + 365 * 24 * 3600
ef = OpenSSL::X509::ExtensionFactory.new
ef.subject_certificate = ca
ef.issuer_certificate = ca
ca.add_extension(ef.create_extension('basicConstraints', 'CA:TRUE', true))
ca.add_extension(ef.create_extension('keyUsage', 'keyCertSign, cRLSign', true))
ca.add_extension(ef.create_extension('subjectKeyIdentifier', 'hash', false))
ca.add_extension(ef.create_extension('authorityKeyIdentifier', 'keyid:always', false))
ca.sign(key, OpenSSL::Digest::SHA256.new)

File.open('./keys/ca.crt', 'w') { |file| file.write(ca.to_pem) }
File.open('./keys/ca.key', 'w') { |file| file.write(key.to_pem) }
